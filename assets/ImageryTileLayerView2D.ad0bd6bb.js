var O=Object.defineProperty,A=Object.defineProperties;var Q=Object.getOwnPropertyDescriptors;var S=Object.getOwnPropertySymbols;var j=Object.prototype.hasOwnProperty,H=Object.prototype.propertyIsEnumerable;var V=(e,t,i)=>t in e?O(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,x=(e,t)=>{for(var i in t||(t={}))j.call(t,i)&&V(e,i,t[i]);if(S)for(var i of S(t))H.call(t,i)&&V(e,i,t[i]);return e},C=(e,t)=>A(e,Q(t));import{tv as B,lk as _,bQ as $,uf as J,aM as q,ac as n,ad as c,ae as I,b1 as N,ke as X,u3 as z,gf as Y,th as K,qr as Z,u2 as ee,a8 as p,qC as te,aH as ie,a7 as se,j as re,hA as ae,fJ as v,gr as U,nR as le,tw as oe,nP as ne,c as w,ug as he,h2 as ce,fQ as k,i1 as ue,g as de,fG as pe}from"./vendor.1dc52be5.js";import{_ as ye,d as me}from"./RasterVFDisplayObject.a460387c.js";import{f as ge}from"./LayerView2D.117f6ba5.js";import{d as fe,w as be,b as we}from"./brushes.576aab26.js";import{I as P}from"./Utils.25ecb0e0.js";import{o as W}from"./TileContainer.c6767449.js";import{g as D,u as L,s as _e,i as ve}from"./RawBlockCache.679f9b8e.js";import{L as Pe,$ as Ie}from"./rasterProjectionHelper.33d3a601.js";import{r as E}from"./util.2009583e.js";import{m as Te}from"./ImageryTileLayerView.11127cd7.js";import{i as Re}from"./RefreshableLayerView.3b33c0ca.js";import"./dataUtils.8a57b425.js";import"./WGLContainer.5147bf48.js";import"./Container.a479a20a.js";import"./EffectView.c4d390fc.js";import"./number.dc47462b.js";import"./definitions.52b5fae8.js";import"./ProgramTemplate.baf6faf0.js";import"./StyleDefinition.57b891ae.js";import"./enums.c01b5663.js";import"./GeometryUtils.5ea26345.js";import"./MaterialKey.4c6f010e.js";import"./alignmentUtils.03ee467b.js";import"./popupUtils.b61067f9.js";class Se extends B{constructor(t,i,s,r,a,l=null){super(t,i,s,r,a),this.bitmap=new fe(l,null,null),this.bitmap.coordScale=[r,a],this.bitmap.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.bitmap.destroy(),this.bitmap=null,this.stage=null}set stencilRef(t){this.bitmap.stencilRef=t}get stencilRef(){return this.bitmap.stencilRef}setTransform(t,i){super.setTransform(t,i),this.bitmap.transforms.dvs=this.transforms.dvs}_createTransforms(){return{dvs:_(),tileMat3:_()}}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap.stage=null}}class Ve extends W{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(t){const i=this._getTileBounds(t),[s,r]=this._tileInfoView.tileInfo.size;return new Se(t,i[0],i[3],s,r)}prepareRenderPasses(t){const i=t.registerRenderPass({name:"imagery (tile)",brushes:[be.raster],target:()=>this.children.map(s=>s.bitmap),drawPhase:P.MAP});return[...super.prepareRenderPasses(t),i]}doRender(t){this.visible&&t.drawPhase===P.MAP&&super.doRender(t)}_getTileBounds(t){const i=this._tileInfoView.getTileBounds($(),t);if(this.isCustomTilingScheme&&t.world){const{tileInfo:s}=this._tileInfoView,r=J(s.spatialReference);if(r){const{resolution:a}=s.lodAt(t.level),l=r/a%s.size[0],o=l?(s.size[0]-l)*a:0;i[0]-=o*t.world,i[2]-=o*t.world}}return i}}const xe=[0,0],F=q.getLogger("esri.views.2d.layers.ImageryTileLayerView2D");let u=class extends N{constructor(){super(...arguments),this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=null,this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._globalUpdateRequested=!1,this.attached=!1,this.container=null,this.layer=null,this.timeExtent=null,this.redrawOrRefetch=X((e,t)=>!this.previousLOD||this.layerView.suspended?Promise.resolve():e?this.doRefresh():this._redrawImage(t))}get useWebGLForProcessing(){var e;return(e=this._get("useWebGLForProcessing"))==null||e}set useWebGLForProcessing(e){this._set("useWebGLForProcessing",e)}get useProgressiveUpdate(){return this._get("useProgressiveUpdate")==null||this._get("useProgressiveUpdate")}set useProgressiveUpdate(e){if(this._tileStrategy&&this.useProgressiveUpdate!==e){this._tileStrategy.destroy(),this.container.removeAllChildren();const t=this._getCacheSize(e);this._tileStrategy=new z({cachePolicy:"purge",acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),cacheSize:t,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",e),this.layerView.requestUpdate()}}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume();const{extent:t,resolution:i,scale:s}=e.state,r=this._tileInfoView.getClosestInfoForScale(s);if(this.layer.raster){var a;if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const l=this._srcResolutions[r.level],o=t.toJSON?t:Y.fromJSON(t);D(this._blockCacheRegistryUrl,this._blockCacheRegistryId,o,i,l,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,((a=this.previousLOD)==null?void 0:a.level)!==r.level&&(this.previousLOD=r,this._symbolizerParams==null||this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,this._fetchQueue.length===0&&this._redrawImage(this._abortController.signal).then(()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()}));const e=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(e),this.layerView.requestUpdate()}get updating(){return this._fetchQueue.updating||this._globalUpdateRequested||!(!this.updatingHandles||!this.updatingHandles.updating)}attach(){K().supportsTextureFloat||(this.useWebGLForProcessing=!1),this._initializeTileInfo(),this._tileInfoView=new Z(this.layerView.tileInfo,this.layerView.fullExtent);const e=this._computeFetchConcurrency();this._fetchQueue=new ee({tileInfoView:this._tileInfoView,concurrency:e,process:(i,s)=>this._fetchTile1(i,s)});const t=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new z({cachePolicy:"purge",acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),cacheSize:t,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,L(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(e){const t=this.container.createTile(e);return this._enqueueTileFetch(t),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,t}releaseTile(e){this._fetchQueue.abort(e.key.id),this.container.removeChild(e),e.once("detach",()=>{e.destroy(),this.layerView.requestUpdate()}),this.layerView.requestUpdate()}createEmptyTilePixelBlock(e=null){const t=e==null||e.join(",")===this._tileInfoView.tileInfo.size.join(",");if(t&&p(this._emptyTilePixelBlock))return this._emptyTilePixelBlock;e=e||this._tileInfoView.tileInfo.size;const[i,s]=e,r=new te({width:i,height:s,pixels:[new Uint8Array(i*s)],mask:new Uint8Array(i*s),pixelType:"u8"});return t&&(this._emptyTilePixelBlock=r),r}_fetchTile1(e,t){const i=!ie(t)&&t.signal,s=this.canUseWebGLForProcessing(),{layerView:r}=this,a=!r.tileInfo.isWrappable&&p(Pe(r.view.spatialReference)),l={allowPartialFill:!0,datumTransformation:r.datumTransformation,interpolation:s?"nearest":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:s,signal:se(i),srcResolution:this._srcResolutions[e.level],timeExtent:r.timeExtent,tileInfo:r.tileInfo,disableWrapAround:a};return this.fetchTile(e,l)}_getCacheSize(e){return e?40:0}_initializeTileInfo(){const e=this.layerView.view.spatialReference,t=new re({x:this.layerView.fullExtent.xmin,y:this.layerView.fullExtent.ymax,spatialReference:e}),{scales:i,srcResolutions:s,isCustomTilingScheme:r}=Ie(this.layer.rasterInfo,e),a=ae.create({spatialReference:e,size:512,scales:i});(a.origin.x===0||a.origin.x>t.x)&&(a.origin=t),this._isCustomTilingScheme=r,this.layerView.set("tileInfo",a),this._srcResolutions=s!=null?s:[]}_computeFetchConcurrency(){const{blockBoundary:e}=this.layer.rasterInfo.storageInfo,t=e[e.length-1];return(t.maxCol-t.minCol+1)*(t.maxRow-t.minRow+1)>64?2:10}async _enqueueTileFetch(e,t){if(!this._fetchQueue.has(e.key.id)){try{const i=await this._fetchQueue.push(e.key),{bandIds:s}=this.layer;let r=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&this._fetchQueue.length===0){r=!1;try{await this._redrawImage(this._abortController&&this._abortController.signal)}catch(o){v(o)&&F.error(o)}this._globalUpdateRequested=!1}!this.canUseWebGLForProcessing()&&this.type!=="rasterVF"||this.layerView.hasTilingEffects||this._symbolizerParams!=null||this._updateSymbolizerParams();const a=this._tileInfoView.getTileCoords(xe,e.key),l=this._tileInfoView.getTileResolution(e.key);await this.updateTileSource(e,{source:i,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:r,bandIds:s,coords:a,resolution:l}),e.once("attach",()=>this.layerView.requestUpdate()),this.container.addChild(e)}catch(i){v(i)||F.error(i)}this.layerView.requestUpdate()}}async _redrawImage(e){if(this.container.children.length===0)return;await this.updatingHandles.addPromise(this.layer.updateRenderer()),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(e):(this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const t=this.container.children.map(async i=>this.updateTileSymbolizerParameters(i,{local:this._symbolizerParams,global:this._globalSymbolizerParams}));await U(t),this.container.requestRender()}async _updateGlobalSymbolizerParams(e){const t={srcResolution:this._srcResolutions[this.previousLOD.level],registryId:this._blockCacheRegistryId,signal:e},i=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,t);if(!i||!i.pixelBlock)return;const s=this.layer.symbolizer.generateWebGLParameters({pixelBlock:le(i.pixelBlock,this.layer.bandIds),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:this.previousLOD.resolution,y:this.previousLOD.resolution},bandIds:this.layer.bandIds});!this.canUseWebGLForProcessing()&&s&&s.type==="stretch"&&this.layer.renderer&&this.layer.renderer.type==="raster-stretch"&&(s.factor=s.factor.map(r=>255*r),s.outMin=Math.round(255*s.outMin),s.outMax=Math.round(255*s.outMax)),this._globalSymbolizerParams=s}_updateSymbolizerParams(){this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:this.previousLOD.resolution,y:this.previousLOD.resolution},bandIds:this.layer.bandIds})}_updateBlockCacheRegistry(e=!1){const{url:t,rasterInfo:i,raster:s}=this.layer,{multidimensionalDefinition:r}=this.layer.normalizeRasterFetchOptions({multidimensionalDefinition:this.layer.multidimensionalDefinition,timeExtent:this.layerView.timeExtent}),a=i!=null&&i.multidimensionalInfo?s.getSliceIndex(r):null,l=ve(t,a);if(l!==this._blockCacheRegistryUrl){if(this._blockCacheRegistryUrl!=null&&L(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=_e(l,this.layer.raster.rasterInfo),e){const o=this._tileInfoView.getClosestInfoForScale(this.layerView.view.scale),d=this._srcResolutions[o.level];D(l,this._blockCacheRegistryId,this.layerView.view.extent,this.layerView.view.resolution,d,this.layer.raster.ioConfig.sampling)}this._blockCacheRegistryUrl=l}}async doRefresh(){await this.updatingHandles.addPromise(this.layer.updateRenderer()),this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const e=[];this._tileStrategy.tiles.forEach(t=>e.push(this._enqueueTileFetch(t))),await U(e)}};n([c()],u.prototype,"_fetchQueue",void 0),n([c()],u.prototype,"_globalUpdateRequested",void 0),n([c()],u.prototype,"attached",void 0),n([c()],u.prototype,"container",void 0),n([c()],u.prototype,"layer",void 0),n([c()],u.prototype,"layerView",void 0),n([c()],u.prototype,"type",void 0),n([c()],u.prototype,"useWebGLForProcessing",null),n([c()],u.prototype,"useProgressiveUpdate",null),n([c()],u.prototype,"timeExtent",void 0),n([c()],u.prototype,"updating",null),u=n([I("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],u);let g=class extends u{constructor(){super(...arguments),this.container=null,this.layer=null,this.type="raster"}attach(){super.attach(),this.container=new Ve(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}canUseWebGLForProcessing(){return this.useWebGLForProcessing&&this.layer.symbolizer.canRenderInWebGL&&!(this.layer.interpolation==="majority"&&E(this.layer))}fetchTile(e,t){return this.layer.fetchTile(e.level,e.row,e.col,t)}async updateTileSource(e,t){const{bandIds:i}=this.layer,s=this._getLayerInterpolation(),r=this.canUseWebGLForProcessing(),{source:a,symbolizerParams:l,globalSymbolizerParams:o,suspended:d,coords:T,resolution:y}=t,{bitmap:h}=e;if([h.x,h.y]=T,h.resolution=y,a&&p(a)&&p(a.pixelBlock)){const m={extent:a.extent,pixelBlock:a.pixelBlock};if(h.rawPixelData=m,r)h.source=a.pixelBlock,h.isRendereredSource=!1;else{const R=await this.layer.applyRenderer(m,(o==null?void 0:o.type)==="stretch"?o:null);h.source=R,h.isRendereredSource=!0}h.symbolizerParameters=r?l:null,r?h.transformGrid||(h.transformGrid=a.transformGrid):h.transformGrid=null}else{const m=this.createEmptyTilePixelBlock();h.source=m,h.symbolizerParameters=r?l:null,h.transformGrid=null}h.bandIds=r?i:null,h.width=this._tileInfoView.tileInfo.size[0],h.height=this._tileInfoView.tileInfo.size[1],h.interpolation=s,h.suspended=d,h.invalidateTexture()}async updateTileSymbolizerParameters(e,t){const{local:i,global:s}=t,{bandIds:r}=this.layer,a=this._getLayerInterpolation(),l=this.canUseWebGLForProcessing(),{bitmap:o}=e,{rawPixelData:d}=o;!l&&p(d)?(o.source=await this.layer.applyRenderer(d,(s==null?void 0:s.type)==="stretch"?s:null),o.isRendereredSource=!0):(o.isRendereredSource&&p(d)&&(o.source=d.pixelBlock),o.isRendereredSource=!1),o.symbolizerParameters=l?s||i:null,o.bandIds=l?r:null,o.interpolation=a,o.suspended=!1}_getLayerInterpolation(){const e=this.layer.renderer.type;if(e==="raster-colormap"||e==="unique-value"||e==="class-breaks")return"nearest";const{interpolation:t}=this.layer,{renderer:i}=this.layer;return i.type==="raster-stretch"&&i.colorRamp!=null?t==="bilinear"||t==="cubic"?"bilinear":"nearest":t}};n([c()],g.prototype,"container",void 0),n([c()],g.prototype,"layer",void 0),n([c()],g.prototype,"type",void 0),g=n([I("esri.views.2d.layers.imagery.ImageryTileView2D")],g);const Ce=g;class ze extends B{constructor(t,i,s,r,a,l=null){super(t,i,s,r,a),this.tileData=new ye(l),this.tileData.coordScale=[r,a],this.tileData.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.tileData.destroy(),this.tileData=null,this.stage=null}set stencilRef(t){this.tileData.stencilRef=t}get stencilRef(){return this.tileData.stencilRef}_createTransforms(){return{dvs:_(),tileMat3:_()}}setTransform(t,i){super.setTransform(t,i);const s=i/(t.resolution*t.pixelRatio),r=this.transforms.tileMat3,[a,l]=this.tileData.offset,o=[this.x+a*i,this.y-l*i],[d,T]=t.toScreenNoRotation([0,0],o),{symbolTileSize:y}=this.tileData.symbolizerParameters,h=Math.round((this.width-this.tileData.offset[0])/y)*y,m=Math.round((this.height-this.tileData.offset[1])/y)*y,R=h/this.rangeX*s,M=m/this.rangeY*s;oe(r,R,0,0,0,M,0,d,T,1),ne(this.transforms.dvs,t.displayViewMat3,r),this.tileData.transforms.dvs=this.transforms.dvs}onAttach(){this.tileData.stage=this.stage}onDetach(){this.tileData.stage=null}}class Ue extends W{constructor(){super(...arguments),this.isCustomTilingScheme=!1,this.symbolTypes=["triangle"]}createTile(t){const i=this._tileInfoView.getTileBounds($(),t),[s,r]=this._tileInfoView.tileInfo.size;return new ze(t,i[0],i[3],s,r)}prepareRenderPasses(t){const i=t.registerRenderPass({name:"imagery (vf tile)",brushes:[we],target:()=>this.children.map(s=>s.tileData),drawPhase:P.MAP});return[...super.prepareRenderPasses(t),i]}doRender(t){this.visible&&t.drawPhase===P.MAP&&this.symbolTypes.forEach(i=>{t.renderPass=i,super.doRender(t)})}}let f=class extends u{constructor(){super(...arguments),this._handle=null,this.container=null,this.layer=null,this.type="rasterVF"}canUseWebGLForProcessing(){return!1}async fetchTile(e,t){t=C(x({},t),{interpolation:"nearest",requestProjectedLocalDirections:!0});const i=await this.layer.fetchTile(e.level,e.row,e.col,t);return this.layer.rasterInfo.dataType==="vector-magdir"&&i!=null&&i.pixelBlock&&(i.pixelBlock=await this.layer.convertVectorFieldData(i.pixelBlock,t)),i}updateTileSource(e,t){const i=t.symbolizerParams,{tileData:s}=e;s.key=e.key,s.width=this._tileInfoView.tileInfo.size[0],s.height=this._tileInfoView.tileInfo.size[1];const{symbolTileSize:r}=i,{source:a}=t;if(s.offset=this._getTileSymbolOffset(s.key,r),p(a)&&p(a.pixelBlock)){const l={extent:a.extent,pixelBlock:a.pixelBlock};s.rawPixelData=l,s.symbolizerParameters=i,s.source=this._sampleVectorFieldData(a.pixelBlock,i,s.offset)}else{const l=[Math.round((this._tileInfoView.tileInfo[0]-s.offset[0])/r),Math.round((this._tileInfoView.tileInfo[1]-s.offset[1])/r)],o=this.createEmptyTilePixelBlock(l);s.source=o,s.symbolizerParameters=i}return s.invalidateVAO(),Promise.resolve(null)}updateTileSymbolizerParameters(e,t){var i;const s=t.local,{symbolTileSize:r}=s,{tileData:a}=e;a.offset=this._getTileSymbolOffset(a.key,r);const l=a.symbolizerParameters.symbolTileSize;return a.symbolizerParameters=s,p((i=a.rawPixelData)==null?void 0:i.pixelBlock)&&l!==r&&(a.source=this._sampleVectorFieldData(a.rawPixelData.pixelBlock,a.symbolizerParameters,a.offset)),Promise.resolve(null)}attach(){super.attach(),this.container=new Ue(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this._updateSymbolType(this.layer.renderer),this._handle=w(()=>this.layer.renderer,e=>this._updateSymbolType(e))}detach(){super.detach(),this.container.removeAllChildren(),this._handle.remove(),this._handle=null}_getTileSymbolOffset(e,t){const i=e.col*this._tileInfoView.tileInfo.size[0]%t,s=e.row*this._tileInfoView.tileInfo.size[1]%t;return[i>t/2?t-i:-i,s>t/2?t-s:-s]}_sampleVectorFieldData(e,t,i){const{symbolTileSize:s}=t;return he(e,"vector-uv",s,i)}_updateSymbolType(e){e.type==="vector-field"&&(this.container.symbolTypes=e.style==="wind-barb"?["scalar","triangle"]:e.style==="simple-scalar"?["scalar"]:["triangle"])}};n([c()],f.prototype,"container",void 0),n([c()],f.prototype,"layer",void 0),n([c()],f.prototype,"type",void 0),f=n([I("esri.views.2d.layers.imagery.VectorFieldTileView2D")],f);const ke=f,G=q.getLogger("esri.views.2d.layers.ImageryTileLayerView2D");let b=class extends Te(Re(ge(pe))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(e){this._useWebGLForProcessing=e,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=e)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(e){this._useProgressiveUpdate=e,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=e)}update(e){this.subview.update(e),this.notifyChange("updating")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.handles.add([ce(this.layer,["bandIds","renderer","interpolation","multidimensionalDefinition"],(e,t,i)=>{const s=i==="multidimensionalDefinition",r=i==="interpolation"&&(e==="majority"||t==="majority")&&E(this.layer),a=i==="renderer"&&t.type!==e.type;a&&this._updateSubview();const l=s||r||a;this.subview.redrawOrRefetch(l).catch(o=>{v(o)||G.error(o)}),this.notifyChange("updating")}),w(()=>{var e;return(e=this.layer.blendMode)!=null?e:"normal"},e=>{this.subview.container.blendMode=e},k),w(()=>{var e;return(e=this.layer.effect)!=null?e:null},e=>{this.subview.container.effect=e},k),w(()=>this.timeExtent,()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch(!0).catch(e=>{v(e)||G.error(e)})},ue)],"attach")}detach(){var e;this.handles.remove("attach"),this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),(e=this.subview)==null||e.destroy(),this.subview=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}async hitTest(e,t){return[new de({attributes:{},geometry:e.clone()})]}doRefresh(){return this.subview.doRefresh()}_updateSubview(){const e=this.layer.renderer.type==="vector-field"?"rasterVF":this.layer.renderer.type==="flow"?"flow":"raster";if(this.subview){var t;if(this.subview.type===e)return void this._attachSubview(this.subview);this._detachSubview(this.subview),(t=this.subview)==null||t.destroy(),this.subview=null}const{layer:i}=this;let s;s=e==="rasterVF"?new ke({layer:i,layerView:this}):e==="flow"?new me({layer:i,layerView:this}):new Ce({layer:i,layerView:this}),"useWebGLForProcessing"in s&&(s.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in s&&(s.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in s&&(s.previousLOD=this.subview&&"previousLOD"in this.subview&&this.subview.previousLOD),this._attachSubview(s),this.subview=s,this.requestUpdate()}_attachSubview(e){e&&!e.attached&&(e.attach(),e.attached=!0,this.container.addChildAt(e.container,0),e.container.blendMode=this.layer.blendMode,e.container.effect=this.layer.effect)}_detachSubview(e){e!=null&&e.attached&&(this.container.removeChild(e.container),e.detach(),e.attached=!1)}};n([c()],b.prototype,"subview",void 0),n([c()],b.prototype,"useWebGLForProcessing",null),n([c()],b.prototype,"useProgressiveUpdate",null),b=n([I("esri.views.2d.layers.ImageryTileLayerView2D")],b);const rt=b;export{rt as default};
