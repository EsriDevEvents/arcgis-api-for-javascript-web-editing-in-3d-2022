import{xk as a,ac as l,ae as m,ma as h}from"./vendor.1dc52be5.js";import{n as p}from"./BitmapTileContainer.b4d40606.js";import{o as c}from"./BaseTileRenderer.d85e0618.js";import"./Bitmap.2f97ffc8.js";import"./brushes.576aab26.js";import"./definitions.52b5fae8.js";import"./Utils.25ecb0e0.js";import"./enums.c01b5663.js";import"./number.dc47462b.js";import"./ProgramTemplate.baf6faf0.js";import"./StyleDefinition.57b891ae.js";import"./GeometryUtils.5ea26345.js";import"./MaterialKey.4c6f010e.js";import"./alignmentUtils.03ee467b.js";import"./TileContainer.c6767449.js";import"./WGLContainer.5147bf48.js";import"./Container.a479a20a.js";import"./EffectView.c4d390fc.js";class d{constructor(){this.gradient=null,this.height=512,this.width=512}render(i){a(i,512,this.intensities,this.gradient,this.minPixelIntensity,this.maxPixelIntensity)}}let o=class extends c{constructor(t){super(t),this._intensityInfo={minPixelIntensity:0,maxPixelIntensity:0},this.featuresView={attributeView:{initialize:()=>{},requestUpdate:()=>{}},requestRender:()=>{}},this._container=new p(t.tileInfoView)}createTile(t){const i=this._container.createTile(t);return this.tileInfoView.getTileCoords(i.bitmap,t),i.bitmap.resolution=this.tileInfoView.getTileResolution(t),i}onConfigUpdate(){const t=this.layer.renderer;if(t.type==="heatmap"){const{minPixelIntensity:i,maxPixelIntensity:n}=t;this._intensityInfo.minPixelIntensity=i,this._intensityInfo.maxPixelIntensity=n,this._gradient=h(t.colorStops),this.tiles.forEach(r=>{const e=r.bitmap.source;e&&(e.minPixelIntensity=i,e.maxPixelIntensity=n,e.gradient=this._gradient,r.bitmap.invalidateTexture())})}}hitTest(){return Promise.resolve([])}install(t){t.addChild(this._container)}uninstall(t){this._container.removeAllChildren(),t.removeChild(this._container)}disposeTile(t){this._container.removeChild(t),t.destroy()}supportsRenderer(t){return t&&t.type==="heatmap"}onTileData(t){const i=this.tiles.get(t.tileKey);if(!i)return;const n=t.intensityInfo,{minPixelIntensity:r,maxPixelIntensity:e}=this._intensityInfo,s=i.bitmap.source||new d;s.intensities=n&&n.matrix||null,s.minPixelIntensity=r,s.maxPixelIntensity=e,s.gradient=this._gradient,i.bitmap.source=s,this._container.addChild(i),this._container.requestRender(),this.requestUpdate()}onTileError(t){console.error(t)}lockGPUUploads(){}unlockGPUUploads(){}fetchResource(t,i){return console.error(t),Promise.reject()}};o=l([m("esri.views.2d.layers.features.tileRenderers.HeatmapTileRenderer")],o);const k=o;export{k as default};
