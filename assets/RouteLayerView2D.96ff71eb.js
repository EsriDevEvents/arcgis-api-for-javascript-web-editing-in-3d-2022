import{fG as v,c as a,i1 as p,a8 as n,a7 as g,g as l,n as m,ac as V,ae as I}from"./vendor.1dc52be5.js";import{f as H}from"./LayerView2D.117f6ba5.js";import{i as b}from"./GraphicContainer.6ad8253a.js";import{r as A}from"./BaseGraphicContainer.875f1ac5.js";import"./Container.a479a20a.js";import"./EffectView.c4d390fc.js";import"./Utils.25ecb0e0.js";import"./enums.c01b5663.js";import"./number.dc47462b.js";import"./CIMSymbolHelper.e5777d0e.js";import"./BidiEngine.b9926823.js";import"./alignmentUtils.03ee467b.js";import"./definitions.52b5fae8.js";import"./GeometryUtils.e53da643.js";import"./normalizeUtilsSync.74de1b64.js";import"./FeatureContainer.183e9c44.js";import"./visualVariablesUtils.7fd15dde.js";import"./visualVariablesUtils.2f752113.js";import"./TileContainer.c6767449.js";import"./WGLContainer.5147bf48.js";import"./brushes.576aab26.js";import"./ProgramTemplate.baf6faf0.js";import"./StyleDefinition.57b891ae.js";import"./GeometryUtils.5ea26345.js";import"./MaterialKey.4c6f010e.js";import"./Matcher.28a7d10a.js";import"./tileUtils.85af3d89.js";import"./TileClipper.95bbf067.js";import"./Geometry.e891c191.js";import"./cimAnalyzer.13178822.js";import"./ExpandedCIM.b5e8a891.js";import"./schemaUtils.64b2d47a.js";import"./createSymbolSchema.d85b2a0c.js";import"./MD5.67d7a872.js";import"./util.2009583e.js";import"./ComputedAttributeStorage.96ac9ebb.js";import"./GraphicsView.eb98715d.js";const d=["routeInfo","directionLines","directionPoints","polygonBarriers","polylineBarriers","pointBarriers","stops"],C=Object.freeze({remove(){},pause(){},resume(){}});let r=class extends H(v){constructor(){super(...arguments),this._graphicsViews=new Map,this._highlightIds=new Map}attach(){for(const i of d)this.handles.add(a(()=>n(this.layer[i])?i==="routeInfo"?[g(this.layer[i])]:g(this.layer[i]).toArray():null,t=>this._createGraphicsView(i,t),p),i)}detach(){this._destroyGraphicsViews()}highlight(i){let t;return typeof i=="number"?t=[i]:i instanceof l?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):m.isCollection(i)&&(t=i.map(s=>s&&s.uid).toArray()),t=t.filter(s=>s!=null),t.length?(this._addHighlight(t),{remove:()=>this._removeHighlight(t)}):C}async hitTest(i,t){if(this.suspended||!this._graphicsViews.size)return Promise.resolve(null);const s=Array.from(this._graphicsViews.values()).reverse().map(e=>e.hitTest(i)).flat().filter(e=>!!e);for(const e of s)e.layer=this.layer,e.sourceLayer=this.layer;return s}moveStart(){}moveEnd(){}update(i){for(const t of this._graphicsViews.values())t.processUpdate(i)}viewChange(){for(const i of this._graphicsViews.values())i.viewChange()}isUpdating(){for(const i of this._graphicsViews.values())if(i.updating)return!0;return!1}_createGraphicsView(i,t){this._destroyGraphicsView(i);const s=this.view,e=()=>this.requestUpdate(),c=new m(n(t)?t.map(u=>{const{attributes:f,geometry:_,symbol:y,popupInfo:w}=u.toPortalJSON();return l.fromJSON({attributes:f,geometry:_,symbol:y,popupTemplate:w})}):[]),h=new b(s.featuresTilingScheme),o=new A({container:h,graphics:c,requestUpdateCallback:e,view:s});this._graphicsViews.set(i,o),this.container.addChildAt(h,d.indexOf(i)),this._updateHighlight(),this.handles.add([a(()=>o.updating,()=>this.notifyChange("updating"),p)],`updating-${i}`)}_destroyGraphicsView(i){if(!this._graphicsViews.has(i))return;const t=this._graphicsViews.get(i);this.container.removeChild(t.container),t.destroy(),this.handles.remove(`updating-${i}`),this._graphicsViews.delete(i)}_destroyGraphicsViews(){this.container.removeAllChildren();for(const[i,t]of this._graphicsViews.entries())this.handles.remove(i),t.destroy();this._graphicsViews.clear()}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const s=this._highlightIds.get(t);this._highlightIds.set(t,s+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const s=this._highlightIds.get(t)-1;s===0?this._highlightIds.delete(t):this._highlightIds.set(t,s)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys());for(const t of this._graphicsViews.values())t.setHighlight(i)}};r=V([I("esri.views.2d.layers.RouteLayerView2D")],r);const gi=r;export{gi as default};
