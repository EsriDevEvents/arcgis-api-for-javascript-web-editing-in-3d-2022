import{O as g,Q as S,R as N,S as y,T as w,U as O,V as U,W as P,X as p,Y as R,Z as T,$ as f,a0 as W,a1 as h,a2 as d,a3 as v}from"./vendor.1dc52be5.js";function F(e,a,t,l){return e.name?e.styleName&&e.styleName==="Esri2DPointSymbolsStyle"?B(e,a,l):O(e,a,l).then(o=>x(o,e.name,a,t,l)):Promise.reject(new U("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference"))}function x(e,a,t,l,o){const u=e.data,b={portal:t&&t.portal||P.getDefault(),url:y(e.baseUrl),origin:"portal-item"},n=u.items.find(r=>r.name===a);if(!n){const r=`The symbol name '${a}' could not be found`;return Promise.reject(new U("symbolstyleutils:symbol-name-not-found",r,{symbolName:a}))}let m=p(R(n,l),b),i=n.thumbnail&&n.thumbnail.href;const c=n.thumbnail&&n.thumbnail.imageData;T()&&(m=f(m),i=f(i));const $={portal:t.portal,url:y(w(m)),origin:"portal-item"};return g(m,o).then(r=>{const j=l==="cimRef"?S(r.data):r.data,s=N(j,$);if(s&&W(s)){if(i){const D=p(i,b);s.thumbnail=new h({url:D})}else c&&(s.thumbnail=new h({url:`data:image/png;base64,${c}`}));e.styleUrl?s.styleOrigin=new d({portal:t.portal,styleUrl:e.styleUrl,name:a}):e.styleName&&(s.styleOrigin=new d({portal:t.portal,styleName:e.styleName,name:a}))}return s})}function B(e,a,t){const l=v.replace(/\{SymbolName\}/gi,e.name);return g(l,t).then(o=>{const u=S(o.data);return N(u,{portal:a.portal,url:y(w(l)),origin:"portal-item"})})}export{x as fetchSymbolFromStyle,F as resolveWebStyleSymbol};
